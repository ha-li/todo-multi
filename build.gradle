allprojects {
   apply plugin: 'idea'
}

// the root project does not have any code, so we do not need
// to apply the java plugin
// apply plugin: 'java'

// import the ant file
ant.importBuild 'build.xml'


// each subproject gets their own project configuration
// which will declare
// 1. any properties,
// 2. plugins,
// 3. dependencies and
// 4. repositories


description = "A Multi Project Gradle Application"

//apply all the common behavior to all projects here
allprojects {
   group = 'com.gecko'
   version = '0.1'
}

// apply behavior common to sub projects here
subprojects {
   apply plugin: 'java'
}

task wrapper (type: Wrapper) {
   gradleVersion = '3.2'
}


task explodeWar (type: Copy) {
   into "$buildDir/explodedDist"
   subprojects {
      from tasks.withType(War)
   }
}

// this is a task from the ant script
// i'm extending it by adding doFirst and doLast
// executing this will execute doFirst, then the ant
// task, then doLast.
ninjaGreet{
   doFirst {
      println "Fellow Ninja!"
   }

   doLast {
      println 'Hello there!'
   }
}




/* buildscript {
   repositories {
      mavenCentral ()
   }

   dependencies {
      classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:0.9.7'
   }
}
apply plugin: 'tomcat'
*/
/*
// try to write all the reports into one report
// model uses testNG, repo uses junit, should be possible
// just not sure how
task aggregateTestReports (type: TestReport) {
   destinationDir = subprojects.test.reports.html.destination
   reportOn test, testNG
}

check.dependsOn aggregateTestReports
*/